{
  "title": "Github and Gitlab sync",
  "author": "Bruno Robert",
  "hostname": "dev.to",
  "date": "2021-03-21",
  "fingerprint": "3f9d6040c894fa34",
  "id": null,
  "license": null,
  "comments": "Top comments (11)\nIf you want to use both GitHub and GitLab:\ngit remote add github <your-github-url>\n# create a remote for GitHubgit remote add gitlab <your-gitlab-url>\n# create another remote for GitLabgit push -u github <local_branch_name>\n# set the default upstream to GitHubIf you want to change your remote URL from GitLab to GitHub:\ngit remote set-url origin <your-github-url>\n# use GitHub as your (only) originWarning: Your\ngit push http://...\ncommand should instead usehttps\n!nice catch\nI tried repo -> settings -> repository -> repository mirroring, for which i found the documentation in the gitlab doc, but i'm getting this error:\nremote Support for password authentication was removed on August 13, 2021\nfor this error I found a blogpost here. Is there no better way to mirror repos nowadays than to clone and then push all of them?\nIn github action:\nuses: wangchucheng/git-repo-sync@v0.1.0\nis this gitlab or github username and version?\ngitlab\nFrom where to get the version of the project\nThanks a lot, work like a charm\nFor the TARGET_TOKEN variable in method 1 github to gitlab, is the token the Personal or project access token?\nI'm using Personal in this case, not sure if there Project Access Token\nThanks a lot!",
  "text": "Both Github and Gitlab are great ways to host your git repositories online. They both have great tools to manage your project, be it open source or private code.\nI'm not going to compare both services in depth since many guides already do so. For me, the general difference between Github and Gitlab is Gitlab is focusing more effort on CI/CD pipelines and tools for companies whereas Github is focused more on the community and creating a platform to share open-source code.\nBoth can be used for either scenario... which makes it really hard to choose between them!\nBut what if I told you you didn't have to choose O_o?\n[\n](https://dev.to#why-i-want-to-use-both-gitlab-and-github)\nWhy I want to use both Gitlab and Github.\nJust a quick disclaimer, this is the method I use. It works for me but might not work for everyone. I recommend experimenting with things for yourself, do some tests.\nI'm sharing my experience because I feel that it could be useful for someone in the same position as me.\nI like to be able to organize my repositories into projects (or groups in Gitlab). Unfortunately, Github doesn't do this.\nI also want to be able to reach as many people as possible with my repositories, Github has the largest community.\nDamn it, I'm stuck, I want features from both providers.\nLuckily for me, Gitlab has two things that make symbiosis between the two tools possible:\n- Github repository import This makes importing a repository from Github super easy.\n- Repository synchronization from Gitlab -> Github (for free) This allows me to use Gitlab as the main source of truth but also have the repository on Github. I can use Github's issue tracker, wiki and forum (Github discussion)\n- Great CI/CD (ok, I lied when I said two things)\n[\n](https://dev.to#sync-gitlab-to-github-easy)\nSync Gitlab to Github (easy)\nThis one is simple. You could set up some CI/CD yourself. But Gitlab will automatically do this for you.\n- Go to \"Settings > Repository > Mirroring repositories\"\n- Enter your Github repo with your username in front.\nhttps://<github username>@github.com/path/to/your/repo.git.\n- In the password field, enter your Github token.\n- Select push (this requires a subscription)\n- Press Mirror repository.\nFrom now on, changes to Gitlab will be mirrored to Github.\n[\n](https://dev.to#sync-github-to-gitlab-intermediate-unless-you-pay)\nSync Github to Gitlab (intermediate unless you pay)\nThere are two ways to do this (both are equivalent just from opposite platforms)\n- Either you set up a CI/CD pipeline on Github that triggers using a webhook (on push and pull requests).\n- Either you set up a CI/CD pipeline on Gitlab that triggers using a webhook (on push and pull requests).\nTurns out this is actually a premium feature... You cannot use the pull webhook without paying now.\nI personally chose to do this from the Github side since the Github method is free.\n[\n](https://dev.to#method-1-github-cicd)\nMethod 1 Github CI/CD.\n- Create the following secrets in your Github repository.\n-\nTARGET_URL.\nvalue: the URL of the Gitlab repository -\nTARGET_TOKEN.\nvalue: Gitlab token -\nTARGET_USERNAME.\nvalue: Gitlab username.\n-\n- Create a Github action for your repository with the following code:\nname: GitlabSync.\non:\n- push.\n- delete.\njobs:\nsync:\nruns-on: ubuntu-latest.\nname: Git Repo Sync.\nsteps:\n- uses: actions/checkout@v2.\nwith:\nfetch-depth: 0.\n- uses: wangchucheng/git-repo-sync@v0.1.0.\nwith:\n# Such as https://github.com/wangchucheng/git-repo-sync.git.\ntarget-url: ${{ secrets.TARGET_URL }}\n# Such as wangchucheng.\ntarget-username: ${{ secrets.TARGET_USERNAME }}\n# You can store token in your project's 'Setting > Secrets' and reference the name here. Such as ${{ secrets.ACCESS\\_TOKEN }}\ntarget-token: ${{ secrets.TARGET_TOKEN }}\n- Make sure the branch you are pushing to in Gitlab is not protected or allows for force push.\n[\n](https://dev.to#method-2-gitlab-cicd-requires-gitlab-premium)\nMethod 2 Gitlab CI/CD (requires Gitlab premium)\nNote that if you have a subscription with Gitlab, you can also do this in a few clicks in the same dashion as how we set up syncing from Gitlab to Github.\nGo to \"Settings > Repository > Mirroring repositories\"\n- Enter your Github repo with your username in front.\nhttps://<github username>@github.com/path/to/your/repo.git.\n- In the password field, enter your Github token.\n- Select pull (this requires a subscription)\n- Press Mirror repository.\n[\n](https://dev.to#manual-setup)\nManual Setup.\n[\n](https://dev.to#setup-the-webhooks)\nSetup the webhooks.\nIf you created the Gitlab project via the Github import tool then you can completely skip this step.\n- In your Github repository, go to \"Settings > Webhooks\"\n- Create a new webhook.\n- Payload path:\nhttps://gitlab.com/api/v4/projects/<gitlab project id>/mirror/pull.\n(the project id can be found in \"Settings > General\") - Content Type:\napplication/json.\n- SSL Verification: off.\n- Only send for: push and pull.\n- Payload path:\nActivate.\nIn the Gitlab project, go to \"Settings > Webhooks\"\nselect.\nPush eventsfrom the repository and enter the Github repository (with a token if it's private)\n[\n](https://dev.to#setup-the-cicd-variables)\nSetup the CI/CD Variables.\n- In the Gitlab project, go to \"Settings > CI/CD > Variables\"\n- Create a variable with key:\nACCESS_TOKEN.\nand value: (make it hidden because this is sensitive)- Create a variable with key:\nREMOTE_REPOSITORY_URL.\nand value:<your Github token>@<your repository URL>\n(make it hidden because this is sensitive)\n- Create a variable with key:\n[\n](https://dev.to#setup-the-cicd)\nSetup the CI/CD.\n- Create a pipeline by either going to \"CI/CD > Editor\" or by creating a file.\n.gitlab-ci.yml.\nin your project root and add the following content:\nsync-with-github:\nbefore_script:\n- git config --global user.name \"${GITLAB_USER_NAME}\"\n- git config --global user.email \"${GITLAB_USER_EMAIL}\"\nscript:\n- git remote add github $REMOTE_REPOSITORY_URL.\n- git checkout master.\n- git pull origin master.\n- git pull github master.\n- git status.\n- git push https://root:$ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:master.\n[\n](https://dev.to#caveats)\nCaveats.\nThis doesn't come without downsides. Here are a few I have found while testing this setup.\n- Wikis, Issues, Discussions, boards, etc. will not sync between the two hosting providers. This will only sync what is in your repository. There are ways to synchronize the Wikis ( The Wiki is essentially a hidden .git repository and both Github and Gitlab use the same Wiki format )\n- It can get confusing to have two remote repositories at the same time.\n- They can get out of sync if multiple commits happen at two locations at once and create conflicts (I only use this on repositories I and only I use)",
  "language": "en",
  "image": "https://media2.dev.to/dynamic/image/width=1000,height=500,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Flw27fhurcb0gam6i00vy.jpg",
  "pagetype": "article",
  "filedate": "2025-08-21",
  "source": "https://dev.to/brunorobert/github-and-gitlab-sync-44mn",
  "source-hostname": "DEV Community",
  "excerpt": "Both Github and Gitlab are great ways to host your git repositories online. They both have great...",
  "categories": "",
  "tags": "github, devops, tooling, git, software, coding, development, engineering, inclusive, community",
  "text_orig": "Both Github and Gitlab are great ways to host your git repositories online. They both have great tools to manage your project, be it open source or private code.\nI'm not going to compare both services in depth since many guides already do so. For me, the general difference between Github and Gitlab is Gitlab is focusing more effort on CI/CD pipelines and tools for companies whereas Github is focused more on the community and creating a platform to share open-source code.\nBoth can be used for either scenario... which makes it really hard to choose between them!\nBut what if I told you you didn't have to choose O_o?\n[\n](https://dev.to#why-i-want-to-use-both-gitlab-and-github)\nWhy I want to use both Gitlab and Github\nJust a quick disclaimer, this is the method I use. It works for me but might not work for everyone. I recommend experimenting with things for yourself, do some tests.\nI'm sharing my experience because I feel that it could be useful for someone in the same position as me.\nI like to be able to organize my repositories into projects (or groups in Gitlab). Unfortunately, Github doesn't do this.\nI also want to be able to reach as many people as possible with my repositories, Github has the largest community.\nDamn it, I'm stuck, I want features from both providers.\nLuckily for me, Gitlab has two things that make symbiosis between the two tools possible:\n- Github repository import This makes importing a repository from Github super easy\n- Repository synchronization from Gitlab -> Github (for free) This allows me to use Gitlab as the main source of truth but also have the repository on Github. I can use Github's issue tracker, wiki and forum (Github discussion)\n- Great CI/CD (ok, I lied when I said two things)\n[\n](https://dev.to#sync-gitlab-to-github-easy)\nSync Gitlab to Github (easy)\nThis one is simple. You could set up some CI/CD yourself. But Gitlab will automatically do this for you.\n- Go to \"Settings > Repository > Mirroring repositories\"\n- Enter your Github repo with your username in front\nhttps://<github username>@github.com/path/to/your/repo.git\n- In the password field, enter your Github token\n- Select push (this requires a subscription)\n- Press Mirror repository\nFrom now on, changes to Gitlab will be mirrored to Github\n[\n](https://dev.to#sync-github-to-gitlab-intermediate-unless-you-pay)\nSync Github to Gitlab (intermediate unless you pay)\nThere are two ways to do this (both are equivalent just from opposite platforms)\n- Either you set up a CI/CD pipeline on Github that triggers using a webhook (on push and pull requests).\n- Either you set up a CI/CD pipeline on Gitlab that triggers using a webhook (on push and pull requests).\nTurns out this is actually a premium feature... You cannot use the pull webhook without paying now\nI personally chose to do this from the Github side since the Github method is free\n[\n](https://dev.to#method-1-github-cicd)\nMethod 1 Github CI/CD\n- Create the following secrets in your Github repository\n-\nTARGET_URL\nvalue: the URL of the Gitlab repository -\nTARGET_TOKEN\nvalue: Gitlab token -\nTARGET_USERNAME\nvalue: Gitlab username\n-\n- Create a Github action for your repository with the following code:\nname: GitlabSync\non:\n- push\n- delete\njobs:\nsync:\nruns-on: ubuntu-latest\nname: Git Repo Sync\nsteps:\n- uses: actions/checkout@v2\nwith:\nfetch-depth: 0\n- uses: wangchucheng/git-repo-sync@v0.1.0\nwith:\n# Such as https://github.com/wangchucheng/git-repo-sync.git\ntarget-url: ${{ secrets.TARGET_URL }}\n# Such as wangchucheng\ntarget-username: ${{ secrets.TARGET_USERNAME }}\n# You can store token in your project's 'Setting > Secrets' and reference the name here. Such as ${{ secrets.ACCESS\\_TOKEN }}\ntarget-token: ${{ secrets.TARGET_TOKEN }}\n- Make sure the branch you are pushing to in Gitlab is not protected or allows for force push\n[\n](https://dev.to#method-2-gitlab-cicd-requires-gitlab-premium)\nMethod 2 Gitlab CI/CD (requires Gitlab premium)\nNote that if you have a subscription with Gitlab, you can also do this in a few clicks in the same dashion as how we set up syncing from Gitlab to Github.\nGo to \"Settings > Repository > Mirroring repositories\"\n- Enter your Github repo with your username in front\nhttps://<github username>@github.com/path/to/your/repo.git\n- In the password field, enter your Github token\n- Select pull (this requires a subscription)\n- Press Mirror repository\n[\n](https://dev.to#manual-setup)\nManual Setup\n[\n](https://dev.to#setup-the-webhooks)\nSetup the webhooks\nIf you created the Gitlab project via the Github import tool then you can completely skip this step.\n- In your Github repository, go to \"Settings > Webhooks\"\n- Create a new webhook\n- Payload path:\nhttps://gitlab.com/api/v4/projects/<gitlab project id>/mirror/pull\n(the project id can be found in \"Settings > General\") - Content Type:\napplication/json\n- SSL Verification: off\n- Only send for: push and pull\n- Payload path:\nActivate\nIn the Gitlab project, go to \"Settings > Webhooks\"\nselect\nPush eventsfrom the repository and enter the Github repository (with a token if it's private)\n[\n](https://dev.to#setup-the-cicd-variables)\nSetup the CI/CD Variables\n- In the Gitlab project, go to \"Settings > CI/CD > Variables\"\n- Create a variable with key:\nACCESS_TOKEN\nand value: (make it hidden because this is sensitive)- Create a variable with key:\nREMOTE_REPOSITORY_URL\nand value:<your Github token>@<your repository URL>\n(make it hidden because this is sensitive)\n- Create a variable with key:\n[\n](https://dev.to#setup-the-cicd)\nSetup the CI/CD\n- Create a pipeline by either going to \"CI/CD > Editor\" or by creating a file\n.gitlab-ci.yml\nin your project root and add the following content:\nsync-with-github:\nbefore_script:\n- git config --global user.name \"${GITLAB_USER_NAME}\"\n- git config --global user.email \"${GITLAB_USER_EMAIL}\"\nscript:\n- git remote add github $REMOTE_REPOSITORY_URL\n- git checkout master\n- git pull origin master\n- git pull github master\n- git status\n- git push https://root:$ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:master\n[\n](https://dev.to#caveats)\nCaveats\nThis doesn't come without downsides. Here are a few I have found while testing this setup.\n- Wikis, Issues, Discussions, boards, etc. will not sync between the two hosting providers. This will only sync what is in your repository. There are ways to synchronize the Wikis ( The Wiki is essentially a hidden .git repository and both Github and Gitlab use the same Wiki format )\n- It can get confusing to have two remote repositories at the same time\n- They can get out of sync if multiple commits happen at two locations at once and create conflicts (I only use this on repositories I and only I use)"
}